---
export interface Props {
  activeTextColor?: string;
  tabs: { heading: string; content: string; image: string; price: string }[];
}

const { tabs, activeTextColor = "#7e6b59" } = Astro.props as Props;
---

<div class="tabs">
  <ul class="tabs-header">
    {
      tabs.map((tab, index) => {
        return (
          <>
            <li class="tab-header-list">{tab.heading}</li>
          </>
        );
      })
    }
    <button class="btn list-btn">Book An Appointment</button>
  </ul>
  <div class="tabs-content-div">
    <h3 class="tabs-desc-header">Description</h3>
    <ul class="tabs-content">
      {
        tabs.map((tab, index) => {
          return (
            <li class="tab-list">
              <img src={tab.image} alt="Image" />
              <div>
                <p class="tab-heading">{tab.heading}</p>
                <h5 class="tab-price">{tab.price}</h5>
                <p>{tab.content}</p>
              </div>
            </li>
          );
        })
      }
    </ul>
  </div>
</div>

<style>
  .tabs {
    margin-top: 30px;
    display: flex;
    justify-content: space-between;
  }

  .tabs-header {
    background: #333;
    color: #fff;
    padding: 10px 20px;
    width: 30%;
  }

  .tab-header-list {
    font-size: 20px;
    padding: 20px;
    border-bottom: 1px dashed;
  }

  .tab-heading {
    letter-spacing: 5px;
  }

  .tabs-content-div {
    background-color: #f4f4f4;
  }

  .tab-list img {
    height: 40vh;
    margin: auto;
    text-align: center;
    display: block;
  }

  .tabs-header li {
    margin-right: 20px;
    cursor: pointer;
  }

  .tabs-desc-header {
    padding: 20px;
  }

  .tab-price {
    color: #7e6b59;
  }

  .list-btn {
    margin-top: 20px;
  }

  .tabs-content {
    font-size: 18px;
    padding: 20px;
    background: #f4f4f4;
  }

  @media screen and (max-width: 600px) {
    .tabs {
      display: block;
    }

    .tabs-header {
      width: 100%;
    }

    .list-btn {
      display: block;
      margin: 20px auto;
    }

    .tab-list img {
      width: 100%;
    }
  }
</style>

<script define:vars={{ activeTextColor }}>
function createTabs(element) {
  const header = element.querySelector(".tabs-header");
  const content = element.querySelector(".tabs-content");
  const tab_headers = [...header.children];
  const tab_contents = [...content.children];
  tab_contents.forEach((x) => (x.style.display = "none"));
  let current_tab_index = -1;

  function setTab(index) {
    if (current_tab_index > -1) {
      tab_headers[current_tab_index].style.fontWeight = 400;
      tab_headers[current_tab_index].style.color = "#fff";
      tab_contents[current_tab_index].style.display = "none";
    }
    tab_headers[index].style.fontWeight = 800;
    tab_headers[index].style.color = "#7e6b59";
    tab_contents[index].style.display = "block";
    current_tab_index = index;
  }

  let default_tab_index = tab_headers.findIndex((x) => {
    return [...x.classList].indexOf("default-tab") > -1;
  });

  default_tab_index = default_tab_index === -1 ? 0 : default_tab_index;
  setTab(default_tab_index);
  tab_headers.forEach((x, i) => (x.onclick = (event) => setTab(i)));
}

// Run
[...document.querySelectorAll(".tabs")].forEach((x) => createTabs(x));
</script>
